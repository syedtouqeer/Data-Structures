
#include<stdio.h>
#include<stdlib.h>
struct node
{
	double data;
	struct node *next;
};
struct node *head=NULL;
void insertatb()
{
	struct node *new;
	double x;
	new=(struct node*) malloc(sizeof(struct node ));
	printf("Enter the value");
	scanf("%lf",&x);
	if(head== NULL)
	{
		head= new;
		head->data= x;
		head->next =NULL;
		return;
	}
		new->data=x;
		new->next=head;
		head= new;
}
void insertate()
{
	struct node *new;
	new->next = NULL;

	double x;
	new= (struct node*) malloc(sizeof(struct node));
	printf("Enter value");
	scanf("%lf",&x);
	  if(head== NULL)
        {
                head= new;
                head->data= x;
                head->next =NULL;
                return;
        }

	struct node *temp;
	temp=head;

     	while(temp->next!=NULL)
     	{
     	temp = temp->next;
     	}
	new->data=x;
   	temp->next = new;
}
void traverse()
{
	struct node *temp=head;
	printf("List elements are --- \n");
	while(temp!=NULL)
	{
		printf("%lf --->",temp->data);
		temp=temp->next;
	}
}
void deleteb()
{
	head=head->next;
}
void deletee()
{
	
  struct node *temp =head;
  struct node *t;
  while(temp->next != NULL)
  {
    t=temp;
    temp=temp->next;
  }
  free(t->next);
  t->next=NULL; 
}

void main()
{
	int c,p;	
	do
	{
	printf("LINKLIST OPERATIONS\n");
	printf("1. Insert at beginning \n 2.insert at end \n 3.traverse \n 4.delete from beginning \n 5. delete from end \n 6. exit");
	printf("\nEnter choice");
	scanf("%d",&c);
	switch(c)
	{
		case 1: insertatb();
			break;
		case 2: insertate();	
			break;
		case 3: traverse();
			break;
		case 4: deleteb();
			break;
		case 5: deletee();
			break;
		case 6: printf("Exit point");
			break;
		default: printf("invalid choice");
	}
	}while(c!=6);
}
